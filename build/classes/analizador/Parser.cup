// ------------  Paquete e importaciones ------------
package analizador;

import java_cup.runtime.*;


//------> Codigo para el parser
//------> Declaracion de variables, funciones y funciones de error

parser code 
{:
    public static String resultado = ""; 

    public void syntax_error(Symbol s)
    {
            System.err.println("Error Sintactico: "+ s.value + " - Fila: " + s.right + " - Columna: " + s.left + ". Recuperado" );
            FuncionTokens.TextoConsola.consola += "Error Sintactico: "+ s.value + " - Fila: " + s.right + " - Columna: " + s.left + ". Recuperado"+"\n";
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {
            System.err.println("Error Sintactico: "+ s.value + " - Fila: " + s.right + " - Columna: " + s.left + ". Sin recuperacion." );
            FuncionTokens.TextoConsola.consola += "Error Sintactico: "+ s.value + " - Fila: " + s.right + " - Columna: " + s.left + ". Sin recuperacion."+"\n";
    }

:}


//------> Codigo para las acciones gramaticales (no tocar)
action code
{:  :}


//------> Declaración de terminales
terminal String ENTERO;
terminal String NUMERODECIMAL;
terminal String PROGRAM, END_PROGRAM;
terminal String CONSOLE, PRINT, END;
terminal String LETRAS;
terminal String DOSPUNTOS, DOBLEDOSPUNTOS;
terminal String COMA, PUNTOYCOMA, IGUAL, COMILLAS;
terminal String POR;
terminal String MAS;
terminal String PARENTESIS_A, PARENTESIS_C;
terminal String MENOR, MAYOR, GUION;
terminal String CORCHETE_A, CORCHETE_C;
terminal String CHAR, DOUBLE, VAR;




//------> Declaración de no terminales
non terminal inicio;
non terminal imprimir_consola;
non terminal lista_instrucciones;
non terminal expresion;
non terminal instruccion;
non terminal variables;
non terminal caracter;
non terminal letras1, letras2;


//------> Definir Simbolo Inicial
start with inicio; 


// ------------>  Producciones  <------------

inicio ::= PROGRAM lista_instrucciones END_PROGRAM
;


lista_instrucciones ::=   lista_instrucciones instruccion
    | instruccion
;

instruccion ::= imprimir_consola 
    | variables
    | error PUNTOYCOMA
;

imprimir_consola ::= CONSOLE DOBLEDOSPUNTOS PRINT IGUAL expresion:val END PUNTOYCOMA
;

expresion ::= NUMERODECIMAL:val                                  {: FuncionTokens.TextoConsola.consola += val.toString()+"\n"; :}
    | ENTERO:val                                                 {: FuncionTokens.TextoConsola.consola += val.toString()+"\n"; :}
;

variables ::= VAR DOSPUNTOS DOUBLE DOBLEDOSPUNTOS letras1 MENOR GUION expresion:val END PUNTOYCOMA   
;

caracter ::= LETRAS
    | ENTERO
;

letras1 ::= LETRAS
    | LETRAS letras2
;

letras2 ::= caracter
    | caracter letras2
;